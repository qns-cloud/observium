# Example Docker Compose file for Observium on Docker Swarm (ARM32v7)
# Maintained by somsakc@hotmail.com
# Updated for Docker Swarm with Portainer and persistent volumes

version: '3.8'

services:
  observiumdb:
    image: jsurf/rpi-mariadb:latest
    environment:
      - MYSQL_ROOT_PASSWORD=passw0rd
      - MYSQL_USER=observium
      - MYSQL_PASSWORD=passw0rd
      - MYSQL_DATABASE=observium
      - TZ=Asia/Bangkok
    volumes:
      - observium_data:/var/lib/mysql
    networks:
      - observium_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.arch == arm
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  observiumap:
    # Launch published image.
    image: mbixtech/arm32v7-observium:latest
    
    # Or build image - uncomment if needed:
    # build:
    #   args:
    #     # Build specific version or "latest".
    #     # - FETCH_VERSION=24.12
    #     - FETCH_VERSION=latest

    environment:
      - OBSERVIUM_ADMIN_USER=admin
      - OBSERVIUM_ADMIN_PASS=passw0rd
      - OBSERVIUM_DB_HOST=observiumdb
      - OBSERVIUM_DB_NAME=observium
      - OBSERVIUM_DB_USER=observium
      - OBSERVIUM_DB_PASS=passw0rd
      # In a Swarm environment, use either the public-facing hostname/IP or Swarm service mesh DNS
      - OBSERVIUM_BASE_URL=${OBSERVIUM_BASE_URL:-http://localhost:8888}
      - TZ=Asia/Bangkok
    volumes:
      - observium_logs:/opt/observium/logs
      - observium_rrd:/opt/observium/rrd
    networks:
      - observium_network
    ports:
      - target: 80
        published: 8888
        mode: ingress
        protocol: tcp
    depends_on:
      - observiumdb
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.arch == arm
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.observium-arm.rule=Host(`observium.example.com`)"
        - "traefik.http.services.observium-arm.loadbalancer.server.port=80"

networks:
  observium_network:
    driver: overlay
    attachable: true

volumes:
  observium_data:
    driver: local
  observium_logs:
    driver: local
  observium_rrd:
    driver: local